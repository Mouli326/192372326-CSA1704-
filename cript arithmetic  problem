from itertools import permutations

def is_valid_solution(s, e, n, d, m, o, r, y):
    # Calculate the numbers based on the letters
    send = 1000 * s + 100 * e + 10 * n + d
    more = 1000 * m + 100 * o + 10 * r + e
    money = 10000 * m + 1000 * o + 100 * n + 10 * e + y
    return send + more == money

def solve_cryptarithmetic():
    # Letters in the problem
    letters = 'SENDMORY'
    
    # Generate all permutations of digits 0-9 for the letters
    for perm in permutations(range(10), len(letters)):
        s, e, n, d, m, o, r, y = perm
        
        # Ensure S and M are not zero (as they are the leading digits)
        if s == 0 or m == 0:
            continue
        
        if is_valid_solution(s, e, n, d, m, o, r, y):
            print(f"SEND = {1000 * s + 100 * e + 10 * n + d}, "
                  f"MORE = {1000 * m + 100 * o + 10 * r + e}, "
                  f"MONEY = {10000 * m + 1000 * o + 100 * n + 10 * e + y}")

if __name__ == "__main__":
    solve_cryptarithmetic()
